// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package api

import (
	"time"

	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
)

const (
	SessionTokenScopes = "sessionToken.Scopes"
)

// Defines values for ClinicClinicSize.
const (
	ClinicClinicSizeN0249 ClinicClinicSize = "0-249"

	ClinicClinicSizeN1000 ClinicClinicSize = "1000+"

	ClinicClinicSizeN250499 ClinicClinicSize = "250-499"

	ClinicClinicSizeN500999 ClinicClinicSize = "500-999"
)

// Defines values for MigrationStatus.
const (
	MigrationStatusCOMPLETED MigrationStatus = "COMPLETED"

	MigrationStatusPENDING MigrationStatus = "PENDING"

	MigrationStatusRUNNING MigrationStatus = "RUNNING"
)

// AssociateClinicianToUser defines model for AssociateClinicianToUser.
type AssociateClinicianToUser struct {
	UserId string `json:"userId"`
}

// Clinic
type Clinic struct {
	// Street address.
	Address    *string `json:"address,omitempty"`
	CanMigrate bool    `json:"canMigrate"`

	// City name.
	City       *string           `json:"city,omitempty"`
	ClinicSize *ClinicClinicSize `json:"clinicSize,omitempty"`
	ClinicType *string           `json:"clinicType,omitempty"`

	// Country name.
	Country     *string   `json:"country,omitempty"`
	CreatedTime time.Time `json:"createdTime"`

	// Clinic identifier.
	Id Id `json:"id"`

	// Name of the clinic.
	Name string `json:"name"`

	// An array of phone numbers.
	PhoneNumbers *[]PhoneNumber `json:"phoneNumbers,omitempty"`

	// Postal code. In the U.S., typically the zip code such as `94301` or `94301-1704`.
	PostalCode *string `json:"postalCode,omitempty"`

	// Globally unique share code for a clinic. The share code is 3 groups of 4 uppercase alphanumeric characters in each group. Ambiguous characters such as `I` and `1`, or `O` and `0` are excluded.
	ShareCode string `json:"shareCode"`

	// State or province. In the U.S., typically something like `CA` or `California`.
	State       *string   `json:"state,omitempty"`
	UpdatedTime time.Time `json:"updatedTime"`
	Website     *string   `json:"website,omitempty"`
}

// ClinicClinicSize defines model for Clinic.ClinicSize.
type ClinicClinicSize string

// The `id` may be empty if the clinician invite has not been accepted.
type Clinician struct {
	CreatedTime time.Time `json:"createdTime"`
	Email       string    `json:"email"`

	// String representation of a Tidepool User ID. Old style IDs are 10-digit strings consisting of only hexadeximcal digits. New style IDs are 36-digit [UUID v4](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random))
	Id *TidepoolUserId `json:"id,omitempty"`

	// The id of the invite if it hasn't been accepted
	InviteId *string `json:"inviteId,omitempty"`

	// The name of the clinician
	Name        *string        `json:"name,omitempty"`
	Roles       ClinicianRoles `json:"roles"`
	UpdatedTime time.Time      `json:"updatedTime"`
}

// ClinicianClinicRelationship defines model for ClinicianClinicRelationship.
type ClinicianClinicRelationship struct {
	// Clinic
	Clinic Clinic `json:"clinic"`

	// The `id` may be empty if the clinician invite has not been accepted.
	Clinician Clinician `json:"clinician"`
}

// ClinicianClinicRelationships defines model for ClinicianClinicRelationships.
type ClinicianClinicRelationships []ClinicianClinicRelationship

// ClinicianRoles defines model for ClinicianRoles.
type ClinicianRoles []string

// Clinicians defines model for Clinicians.
type Clinicians []Clinician

// Clinics defines model for Clinics.
type Clinics []Clinic

// CreatePatient defines model for CreatePatient.
type CreatePatient struct {
	IsMigrated *bool `json:"isMigrated,omitempty"`

	// String representation of a Tidepool User ID. Old style IDs are 10-digit strings consisting of only hexadeximcal digits. New style IDs are 36-digit [UUID v4](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random))
	LegacyClinicianId *TidepoolUserId     `json:"legacyClinicianId,omitempty"`
	Permissions       *PatientPermissions `json:"permissions,omitempty"`
}

// Error defines model for Error.
type Error struct {
	Code    int    `json:"code"`
	Message string `json:"message"`
}

// Clinic identifier.
type Id string

// Meta defines model for Meta.
type Meta struct {
	Count *int `json:"count,omitempty"`
}

// Migration defines model for Migration.
type Migration struct {
	CreatedTime time.Time `json:"createdTime"`

	// The current status of the migration
	Status      *MigrationStatus `json:"status,omitempty"`
	UpdatedTime time.Time        `json:"updatedTime"`

	// The user id of the legacy clinician account that needs to be migrated.
	UserId string `json:"userId"`
}

// The current status of the migration
type MigrationStatus string

// MigrationUpdate defines model for MigrationUpdate.
type MigrationUpdate struct {
	// The current status of the migration
	Status MigrationStatus `json:"status"`
}

// Migrations defines model for Migrations.
type Migrations []Migration

// Patient defines model for Patient.
type Patient struct {
	BirthDate   openapi_types.Date `json:"birthDate"`
	CreatedTime time.Time          `json:"createdTime"`
	Email       *string            `json:"email,omitempty"`

	// The full name of the patient
	FullName string `json:"fullName"`

	// String representation of a Tidepool User ID. Old style IDs are 10-digit strings consisting of only hexadeximcal digits. New style IDs are 36-digit [UUID v4](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random))
	Id TidepoolUserId `json:"id"`

	// The medical record number of the patient
	Mrn           *string             `json:"mrn,omitempty"`
	Permissions   *PatientPermissions `json:"permissions,omitempty"`
	TargetDevices *[]string           `json:"targetDevices,omitempty"`
	UpdatedTime   time.Time           `json:"updatedTime"`
}

// PatientClinicRelationship defines model for PatientClinicRelationship.
type PatientClinicRelationship struct {
	// Clinic
	Clinic  Clinic  `json:"clinic"`
	Patient Patient `json:"patient"`
}

// PatientClinicRelationships defines model for PatientClinicRelationships.
type PatientClinicRelationships []PatientClinicRelationship

// PatientPermissions defines model for PatientPermissions.
type PatientPermissions struct {
	Custodian *map[string]interface{} `json:"custodian,omitempty"`
	Note      *map[string]interface{} `json:"note,omitempty"`
	Upload    *map[string]interface{} `json:"upload,omitempty"`
	View      *map[string]interface{} `json:"view,omitempty"`
}

// Patients defines model for Patients.
type Patients []Patient

// PatientsResponse defines model for PatientsResponse.
type PatientsResponse struct {
	Data *Patients `json:"data,omitempty"`
	Meta *Meta     `json:"meta,omitempty"`
}

// PhoneNumber defines model for PhoneNumber.
type PhoneNumber struct {
	Number string  `json:"number"`
	Type   *string `json:"type,omitempty"`
}

// String representation of a Tidepool User ID. Old style IDs are 10-digit strings consisting of only hexadeximcal digits. New style IDs are 36-digit [UUID v4](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random))
type TidepoolUserId string

// ClinicId defines model for clinicId.
type ClinicId string

// ClinicianId defines model for clinicianId.
type ClinicianId string

// Email defines model for email.
type Email openapi_types.Email

// InviteId defines model for inviteId.
type InviteId string

// Limit defines model for limit.
type Limit int

// Offset defines model for offset.
type Offset int

// PatientId defines model for patientId.
type PatientId string

// Role defines model for role.
type Role string

// Search defines model for search.
type Search string

// ShareCode defines model for shareCode.
type ShareCode string

// Sort defines model for sort.
type Sort string

// String representation of a Tidepool User ID. Old style IDs are 10-digit strings consisting of only hexadeximcal digits. New style IDs are 36-digit [UUID v4](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random))
type UserId TidepoolUserId

// ListClinicsForClinicianParams defines parameters for ListClinicsForClinician.
type ListClinicsForClinicianParams struct {
	Offset *Offset `json:"offset,omitempty"`
	Limit  *Limit  `json:"limit,omitempty"`
}

// ListClinicsParams defines parameters for ListClinics.
type ListClinicsParams struct {
	Limit     *Limit     `json:"limit,omitempty"`
	Offset    *Offset    `json:"offset,omitempty"`
	ShareCode *ShareCode `json:"shareCode,omitempty"`
}

// CreateClinicJSONBody defines parameters for CreateClinic.
type CreateClinicJSONBody Clinic

// UpdateClinicJSONBody defines parameters for UpdateClinic.
type UpdateClinicJSONBody Clinic

// ListCliniciansParams defines parameters for ListClinicians.
type ListCliniciansParams struct {
	// Full text search query
	Search *Search `json:"search,omitempty"`
	Offset *Offset `json:"offset,omitempty"`
	Limit  *Limit  `json:"limit,omitempty"`
	Email  *Email  `json:"email,omitempty"`
	Role   *Role   `json:"role,omitempty"`
}

// CreateClinicianJSONBody defines parameters for CreateClinician.
type CreateClinicianJSONBody Clinician

// UpdateClinicianJSONBody defines parameters for UpdateClinician.
type UpdateClinicianJSONBody Clinician

// AssociateClinicianToUserJSONBody defines parameters for AssociateClinicianToUser.
type AssociateClinicianToUserJSONBody AssociateClinicianToUser

// MigrateLegacyClinicianPatientsJSONBody defines parameters for MigrateLegacyClinicianPatients.
type MigrateLegacyClinicianPatientsJSONBody Migration

// UpdateMigrationJSONBody defines parameters for UpdateMigration.
type UpdateMigrationJSONBody MigrationUpdate

// ListPatientsParams defines parameters for ListPatients.
type ListPatientsParams struct {
	// Full text search query
	Search *Search `json:"search,omitempty"`
	Offset *Offset `json:"offset,omitempty"`
	Limit  *Limit  `json:"limit,omitempty"`

	// Sort order and attribute (e.g. +name or -name)
	Sort *Sort `json:"sort,omitempty"`
}

// CreatePatientAccountJSONBody defines parameters for CreatePatientAccount.
type CreatePatientAccountJSONBody Patient

// CreatePatientFromUserJSONBody defines parameters for CreatePatientFromUser.
type CreatePatientFromUserJSONBody CreatePatient

// UpdatePatientJSONBody defines parameters for UpdatePatient.
type UpdatePatientJSONBody Patient

// UpdatePatientPermissionsJSONBody defines parameters for UpdatePatientPermissions.
type UpdatePatientPermissionsJSONBody PatientPermissions

// ListClinicsForPatientParams defines parameters for ListClinicsForPatient.
type ListClinicsForPatientParams struct {
	Offset *Offset `json:"offset,omitempty"`
	Limit  *Limit  `json:"limit,omitempty"`
}

// CreateClinicJSONRequestBody defines body for CreateClinic for application/json ContentType.
type CreateClinicJSONRequestBody CreateClinicJSONBody

// UpdateClinicJSONRequestBody defines body for UpdateClinic for application/json ContentType.
type UpdateClinicJSONRequestBody UpdateClinicJSONBody

// CreateClinicianJSONRequestBody defines body for CreateClinician for application/json ContentType.
type CreateClinicianJSONRequestBody CreateClinicianJSONBody

// UpdateClinicianJSONRequestBody defines body for UpdateClinician for application/json ContentType.
type UpdateClinicianJSONRequestBody UpdateClinicianJSONBody

// AssociateClinicianToUserJSONRequestBody defines body for AssociateClinicianToUser for application/json ContentType.
type AssociateClinicianToUserJSONRequestBody AssociateClinicianToUserJSONBody

// MigrateLegacyClinicianPatientsJSONRequestBody defines body for MigrateLegacyClinicianPatients for application/json ContentType.
type MigrateLegacyClinicianPatientsJSONRequestBody MigrateLegacyClinicianPatientsJSONBody

// UpdateMigrationJSONRequestBody defines body for UpdateMigration for application/json ContentType.
type UpdateMigrationJSONRequestBody UpdateMigrationJSONBody

// CreatePatientAccountJSONRequestBody defines body for CreatePatientAccount for application/json ContentType.
type CreatePatientAccountJSONRequestBody CreatePatientAccountJSONBody

// CreatePatientFromUserJSONRequestBody defines body for CreatePatientFromUser for application/json ContentType.
type CreatePatientFromUserJSONRequestBody CreatePatientFromUserJSONBody

// UpdatePatientJSONRequestBody defines body for UpdatePatient for application/json ContentType.
type UpdatePatientJSONRequestBody UpdatePatientJSONBody

// UpdatePatientPermissionsJSONRequestBody defines body for UpdatePatientPermissions for application/json ContentType.
type UpdatePatientPermissionsJSONRequestBody UpdatePatientPermissionsJSONBody


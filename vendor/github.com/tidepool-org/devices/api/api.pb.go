// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.3
// source: api.proto

package api

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BloodGlucoseUnits int32

const (
	BloodGlucoseUnits_MilligramsPerDeciliter BloodGlucoseUnits = 0
)

// Enum value maps for BloodGlucoseUnits.
var (
	BloodGlucoseUnits_name = map[int32]string{
		0: "MilligramsPerDeciliter",
	}
	BloodGlucoseUnits_value = map[string]int32{
		"MilligramsPerDeciliter": 0,
	}
)

func (x BloodGlucoseUnits) Enum() *BloodGlucoseUnits {
	p := new(BloodGlucoseUnits)
	*p = x
	return p
}

func (x BloodGlucoseUnits) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BloodGlucoseUnits) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[0].Descriptor()
}

func (BloodGlucoseUnits) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[0]
}

func (x BloodGlucoseUnits) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BloodGlucoseUnits.Descriptor instead.
func (BloodGlucoseUnits) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

type BasalRateUnits int32

const (
	BasalRateUnits_UnitsPerHour BasalRateUnits = 0
)

// Enum value maps for BasalRateUnits.
var (
	BasalRateUnits_name = map[int32]string{
		0: "UnitsPerHour",
	}
	BasalRateUnits_value = map[string]int32{
		"UnitsPerHour": 0,
	}
)

func (x BasalRateUnits) Enum() *BasalRateUnits {
	p := new(BasalRateUnits)
	*p = x
	return p
}

func (x BasalRateUnits) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BasalRateUnits) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[1].Descriptor()
}

func (BasalRateUnits) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[1]
}

func (x BasalRateUnits) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BasalRateUnits.Descriptor instead.
func (BasalRateUnits) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

type CarbohydrateRatioUnits int32

const (
	CarbohydrateRatioUnits_GramsPerUnit CarbohydrateRatioUnits = 0
)

// Enum value maps for CarbohydrateRatioUnits.
var (
	CarbohydrateRatioUnits_name = map[int32]string{
		0: "GramsPerUnit",
	}
	CarbohydrateRatioUnits_value = map[string]int32{
		"GramsPerUnit": 0,
	}
)

func (x CarbohydrateRatioUnits) Enum() *CarbohydrateRatioUnits {
	p := new(CarbohydrateRatioUnits)
	*p = x
	return p
}

func (x CarbohydrateRatioUnits) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CarbohydrateRatioUnits) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[2].Descriptor()
}

func (CarbohydrateRatioUnits) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[2]
}

func (x CarbohydrateRatioUnits) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CarbohydrateRatioUnits.Descriptor instead.
func (CarbohydrateRatioUnits) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

type BolusUnits int32

const (
	BolusUnits_Units BolusUnits = 0
)

// Enum value maps for BolusUnits.
var (
	BolusUnits_name = map[int32]string{
		0: "Units",
	}
	BolusUnits_value = map[string]int32{
		"Units": 0,
	}
)

func (x BolusUnits) Enum() *BolusUnits {
	p := new(BolusUnits)
	*p = x
	return p
}

func (x BolusUnits) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BolusUnits) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[3].Descriptor()
}

func (BolusUnits) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[3]
}

func (x BolusUnits) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BolusUnits.Descriptor instead.
func (BolusUnits) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

type GetPumpByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPumpByIdRequest) Reset() {
	*x = GetPumpByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPumpByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPumpByIdRequest) ProtoMessage() {}

func (x *GetPumpByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPumpByIdRequest.ProtoReflect.Descriptor instead.
func (*GetPumpByIdRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *GetPumpByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPumpByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pump *Pump `protobuf:"bytes,1,opt,name=pump,proto3" json:"pump,omitempty"`
}

func (x *GetPumpByIdResponse) Reset() {
	*x = GetPumpByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPumpByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPumpByIdResponse) ProtoMessage() {}

func (x *GetPumpByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPumpByIdResponse.ProtoReflect.Descriptor instead.
func (*GetPumpByIdResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *GetPumpByIdResponse) GetPump() *Pump {
	if x != nil {
		return x.Pump
	}
	return nil
}

type ListPumpsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListPumpsRequest) Reset() {
	*x = ListPumpsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPumpsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPumpsRequest) ProtoMessage() {}

func (x *ListPumpsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPumpsRequest.ProtoReflect.Descriptor instead.
func (*ListPumpsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

type ListPumpsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pumps []*Pump `protobuf:"bytes,1,rep,name=pumps,proto3" json:"pumps,omitempty"`
}

func (x *ListPumpsResponse) Reset() {
	*x = ListPumpsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPumpsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPumpsResponse) ProtoMessage() {}

func (x *ListPumpsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPumpsResponse.ProtoReflect.Descriptor instead.
func (*ListPumpsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *ListPumpsResponse) GetPumps() []*Pump {
	if x != nil {
		return x.Pumps
	}
	return nil
}

type Pump struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique device identifier
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// device display name
	DisplayName string `protobuf:"bytes,2,opt,name=displayName,proto3" json:"displayName,omitempty"`
	// device manufacturers
	Manufacturers []string `protobuf:"bytes,3,rep,name=manufacturers,proto3" json:"manufacturers,omitempty"`
	// device model
	Model string `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	// guard rails
	GuardRails *GuardRails `protobuf:"bytes,5,opt,name=guardRails,proto3" json:"guardRails,omitempty"`
}

func (x *Pump) Reset() {
	*x = Pump{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pump) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pump) ProtoMessage() {}

func (x *Pump) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pump.ProtoReflect.Descriptor instead.
func (*Pump) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

func (x *Pump) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Pump) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Pump) GetManufacturers() []string {
	if x != nil {
		return x.Manufacturers
	}
	return nil
}

func (x *Pump) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Pump) GetGuardRails() *GuardRails {
	if x != nil {
		return x.GuardRails
	}
	return nil
}

type GuardRails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Glucose safety limit guard rail
	GlucoseSafetyLimit *GlucoseSafetyLimitGuardRail `protobuf:"bytes,1,opt,name=glucoseSafetyLimit,proto3" json:"glucoseSafetyLimit,omitempty"`
	// Insulin sensitivity guard rail
	InsulinSensitivity *InsulinSensitivityGuardRail `protobuf:"bytes,2,opt,name=insulinSensitivity,proto3" json:"insulinSensitivity,omitempty"`
	// Basal rates guard rail
	BasalRates *BasalRatesGuardRail `protobuf:"bytes,3,opt,name=basalRates,proto3" json:"basalRates,omitempty"`
	// Carbohydrate ratio guard rail
	CarbohydrateRatio *CarbohydrateRatioGuardRail `protobuf:"bytes,4,opt,name=carbohydrateRatio,proto3" json:"carbohydrateRatio,omitempty"`
	// Basal rate maximum guard rail
	BasalRateMaximum *BasalRateMaximumGuardRail `protobuf:"bytes,5,opt,name=basalRateMaximum,proto3" json:"basalRateMaximum,omitempty"`
	// Bolus amount maximum guard rail
	BolusAmountMaximum *BolusAmountMaximumGuardRail `protobuf:"bytes,6,opt,name=bolusAmountMaximum,proto3" json:"bolusAmountMaximum,omitempty"`
	// Correction range guard rail
	CorrectionRange *CorrectionRangeGuardRail `protobuf:"bytes,7,opt,name=correctionRange,proto3" json:"correctionRange,omitempty"`
	// Preprandial correction range guard rail
	PreprandialCorrectionRange *CorrectionRangeGuardRail `protobuf:"bytes,8,opt,name=preprandialCorrectionRange,proto3" json:"preprandialCorrectionRange,omitempty"`
	// Workout correction range guard rail
	WorkoutCorrectionRange *CorrectionRangeGuardRail `protobuf:"bytes,9,opt,name=workoutCorrectionRange,proto3" json:"workoutCorrectionRange,omitempty"`
}

func (x *GuardRails) Reset() {
	*x = GuardRails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuardRails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuardRails) ProtoMessage() {}

func (x *GuardRails) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuardRails.ProtoReflect.Descriptor instead.
func (*GuardRails) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

func (x *GuardRails) GetGlucoseSafetyLimit() *GlucoseSafetyLimitGuardRail {
	if x != nil {
		return x.GlucoseSafetyLimit
	}
	return nil
}

func (x *GuardRails) GetInsulinSensitivity() *InsulinSensitivityGuardRail {
	if x != nil {
		return x.InsulinSensitivity
	}
	return nil
}

func (x *GuardRails) GetBasalRates() *BasalRatesGuardRail {
	if x != nil {
		return x.BasalRates
	}
	return nil
}

func (x *GuardRails) GetCarbohydrateRatio() *CarbohydrateRatioGuardRail {
	if x != nil {
		return x.CarbohydrateRatio
	}
	return nil
}

func (x *GuardRails) GetBasalRateMaximum() *BasalRateMaximumGuardRail {
	if x != nil {
		return x.BasalRateMaximum
	}
	return nil
}

func (x *GuardRails) GetBolusAmountMaximum() *BolusAmountMaximumGuardRail {
	if x != nil {
		return x.BolusAmountMaximum
	}
	return nil
}

func (x *GuardRails) GetCorrectionRange() *CorrectionRangeGuardRail {
	if x != nil {
		return x.CorrectionRange
	}
	return nil
}

func (x *GuardRails) GetPreprandialCorrectionRange() *CorrectionRangeGuardRail {
	if x != nil {
		return x.PreprandialCorrectionRange
	}
	return nil
}

func (x *GuardRails) GetWorkoutCorrectionRange() *CorrectionRangeGuardRail {
	if x != nil {
		return x.WorkoutCorrectionRange
	}
	return nil
}

type GlucoseSafetyLimitGuardRail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Blood glucose units
	Units BloodGlucoseUnits `protobuf:"varint,1,opt,name=units,proto3,enum=api.BloodGlucoseUnits" json:"units,omitempty"`
	// Tidepool recommended bounds
	RecommendedBounds *RecommendedBounds `protobuf:"bytes,2,opt,name=recommendedBounds,proto3" json:"recommendedBounds,omitempty"`
	// Device specific absolute bounds
	AbsoluteBounds *AbsoluteBounds `protobuf:"bytes,3,opt,name=absoluteBounds,proto3" json:"absoluteBounds,omitempty"`
}

func (x *GlucoseSafetyLimitGuardRail) Reset() {
	*x = GlucoseSafetyLimitGuardRail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlucoseSafetyLimitGuardRail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlucoseSafetyLimitGuardRail) ProtoMessage() {}

func (x *GlucoseSafetyLimitGuardRail) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlucoseSafetyLimitGuardRail.ProtoReflect.Descriptor instead.
func (*GlucoseSafetyLimitGuardRail) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

func (x *GlucoseSafetyLimitGuardRail) GetUnits() BloodGlucoseUnits {
	if x != nil {
		return x.Units
	}
	return BloodGlucoseUnits_MilligramsPerDeciliter
}

func (x *GlucoseSafetyLimitGuardRail) GetRecommendedBounds() *RecommendedBounds {
	if x != nil {
		return x.RecommendedBounds
	}
	return nil
}

func (x *GlucoseSafetyLimitGuardRail) GetAbsoluteBounds() *AbsoluteBounds {
	if x != nil {
		return x.AbsoluteBounds
	}
	return nil
}

type InsulinSensitivityGuardRail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Blood glucose units
	Units BloodGlucoseUnits `protobuf:"varint,1,opt,name=units,proto3,enum=api.BloodGlucoseUnits" json:"units,omitempty"`
	// Tidepool recommended bounds
	RecommendedBounds *RecommendedBounds `protobuf:"bytes,2,opt,name=recommendedBounds,proto3" json:"recommendedBounds,omitempty"`
	// Device specific absolute bounds
	AbsoluteBounds *AbsoluteBounds `protobuf:"bytes,3,opt,name=absoluteBounds,proto3" json:"absoluteBounds,omitempty"`
	// Maximum number of time segments
	MaxSegments *int32 `protobuf:"varint,4,opt,name=maxSegments,proto3,oneof" json:"maxSegments,omitempty"`
}

func (x *InsulinSensitivityGuardRail) Reset() {
	*x = InsulinSensitivityGuardRail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsulinSensitivityGuardRail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsulinSensitivityGuardRail) ProtoMessage() {}

func (x *InsulinSensitivityGuardRail) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsulinSensitivityGuardRail.ProtoReflect.Descriptor instead.
func (*InsulinSensitivityGuardRail) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

func (x *InsulinSensitivityGuardRail) GetUnits() BloodGlucoseUnits {
	if x != nil {
		return x.Units
	}
	return BloodGlucoseUnits_MilligramsPerDeciliter
}

func (x *InsulinSensitivityGuardRail) GetRecommendedBounds() *RecommendedBounds {
	if x != nil {
		return x.RecommendedBounds
	}
	return nil
}

func (x *InsulinSensitivityGuardRail) GetAbsoluteBounds() *AbsoluteBounds {
	if x != nil {
		return x.AbsoluteBounds
	}
	return nil
}

func (x *InsulinSensitivityGuardRail) GetMaxSegments() int32 {
	if x != nil && x.MaxSegments != nil {
		return *x.MaxSegments
	}
	return 0
}

type BasalRatesGuardRail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Basal rate units
	Units BasalRateUnits `protobuf:"varint,1,opt,name=units,proto3,enum=api.BasalRateUnits" json:"units,omitempty"`
	// Default value
	DefaultValue *FixedDecimal `protobuf:"bytes,2,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	// Device specific absolute bounds. Some pumps might have different increments for different ranges.
	AbsoluteBounds []*AbsoluteBounds `protobuf:"bytes,3,rep,name=absoluteBounds,proto3" json:"absoluteBounds,omitempty"`
	// Maximum number of time segments
	MaxSegments *int32 `protobuf:"varint,4,opt,name=maxSegments,proto3,oneof" json:"maxSegments,omitempty"`
}

func (x *BasalRatesGuardRail) Reset() {
	*x = BasalRatesGuardRail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasalRatesGuardRail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasalRatesGuardRail) ProtoMessage() {}

func (x *BasalRatesGuardRail) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasalRatesGuardRail.ProtoReflect.Descriptor instead.
func (*BasalRatesGuardRail) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8}
}

func (x *BasalRatesGuardRail) GetUnits() BasalRateUnits {
	if x != nil {
		return x.Units
	}
	return BasalRateUnits_UnitsPerHour
}

func (x *BasalRatesGuardRail) GetDefaultValue() *FixedDecimal {
	if x != nil {
		return x.DefaultValue
	}
	return nil
}

func (x *BasalRatesGuardRail) GetAbsoluteBounds() []*AbsoluteBounds {
	if x != nil {
		return x.AbsoluteBounds
	}
	return nil
}

func (x *BasalRatesGuardRail) GetMaxSegments() int32 {
	if x != nil && x.MaxSegments != nil {
		return *x.MaxSegments
	}
	return 0
}

type CarbohydrateRatioGuardRail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Carbohydrate ratio units
	Units CarbohydrateRatioUnits `protobuf:"varint,1,opt,name=units,proto3,enum=api.CarbohydrateRatioUnits" json:"units,omitempty"`
	// Tidepool recommended bounds
	RecommendedBounds *RecommendedBounds `protobuf:"bytes,2,opt,name=recommendedBounds,proto3" json:"recommendedBounds,omitempty"`
	// Device specific absolute bounds
	AbsoluteBounds *AbsoluteBounds `protobuf:"bytes,3,opt,name=absoluteBounds,proto3" json:"absoluteBounds,omitempty"`
	// Maximum number of time segments
	MaxSegments *int32 `protobuf:"varint,4,opt,name=maxSegments,proto3,oneof" json:"maxSegments,omitempty"`
}

func (x *CarbohydrateRatioGuardRail) Reset() {
	*x = CarbohydrateRatioGuardRail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarbohydrateRatioGuardRail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarbohydrateRatioGuardRail) ProtoMessage() {}

func (x *CarbohydrateRatioGuardRail) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarbohydrateRatioGuardRail.ProtoReflect.Descriptor instead.
func (*CarbohydrateRatioGuardRail) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9}
}

func (x *CarbohydrateRatioGuardRail) GetUnits() CarbohydrateRatioUnits {
	if x != nil {
		return x.Units
	}
	return CarbohydrateRatioUnits_GramsPerUnit
}

func (x *CarbohydrateRatioGuardRail) GetRecommendedBounds() *RecommendedBounds {
	if x != nil {
		return x.RecommendedBounds
	}
	return nil
}

func (x *CarbohydrateRatioGuardRail) GetAbsoluteBounds() *AbsoluteBounds {
	if x != nil {
		return x.AbsoluteBounds
	}
	return nil
}

func (x *CarbohydrateRatioGuardRail) GetMaxSegments() int32 {
	if x != nil && x.MaxSegments != nil {
		return *x.MaxSegments
	}
	return 0
}

type BasalRateMaximumGuardRail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Basal rate units
	Units BasalRateUnits `protobuf:"varint,1,opt,name=units,proto3,enum=api.BasalRateUnits" json:"units,omitempty"`
	// Default value
	DefaultValue *FixedDecimal `protobuf:"bytes,2,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	// Device specific absolute bounds
	AbsoluteBounds *AbsoluteBounds `protobuf:"bytes,3,opt,name=absoluteBounds,proto3" json:"absoluteBounds,omitempty"`
}

func (x *BasalRateMaximumGuardRail) Reset() {
	*x = BasalRateMaximumGuardRail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasalRateMaximumGuardRail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasalRateMaximumGuardRail) ProtoMessage() {}

func (x *BasalRateMaximumGuardRail) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasalRateMaximumGuardRail.ProtoReflect.Descriptor instead.
func (*BasalRateMaximumGuardRail) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{10}
}

func (x *BasalRateMaximumGuardRail) GetUnits() BasalRateUnits {
	if x != nil {
		return x.Units
	}
	return BasalRateUnits_UnitsPerHour
}

func (x *BasalRateMaximumGuardRail) GetDefaultValue() *FixedDecimal {
	if x != nil {
		return x.DefaultValue
	}
	return nil
}

func (x *BasalRateMaximumGuardRail) GetAbsoluteBounds() *AbsoluteBounds {
	if x != nil {
		return x.AbsoluteBounds
	}
	return nil
}

type BolusAmountMaximumGuardRail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Bolus units
	Units BolusUnits `protobuf:"varint,1,opt,name=units,proto3,enum=api.BolusUnits" json:"units,omitempty"`
	// Tidepool recommended bounds
	RecommendedBounds *RecommendedBounds `protobuf:"bytes,3,opt,name=recommendedBounds,proto3" json:"recommendedBounds,omitempty"`
	// Device specific absolute bounds
	AbsoluteBounds *AbsoluteBounds `protobuf:"bytes,4,opt,name=absoluteBounds,proto3" json:"absoluteBounds,omitempty"`
}

func (x *BolusAmountMaximumGuardRail) Reset() {
	*x = BolusAmountMaximumGuardRail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BolusAmountMaximumGuardRail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BolusAmountMaximumGuardRail) ProtoMessage() {}

func (x *BolusAmountMaximumGuardRail) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BolusAmountMaximumGuardRail.ProtoReflect.Descriptor instead.
func (*BolusAmountMaximumGuardRail) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{11}
}

func (x *BolusAmountMaximumGuardRail) GetUnits() BolusUnits {
	if x != nil {
		return x.Units
	}
	return BolusUnits_Units
}

func (x *BolusAmountMaximumGuardRail) GetRecommendedBounds() *RecommendedBounds {
	if x != nil {
		return x.RecommendedBounds
	}
	return nil
}

func (x *BolusAmountMaximumGuardRail) GetAbsoluteBounds() *AbsoluteBounds {
	if x != nil {
		return x.AbsoluteBounds
	}
	return nil
}

type CorrectionRangeGuardRail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Blood glucose units
	Units BloodGlucoseUnits `protobuf:"varint,1,opt,name=units,proto3,enum=api.BloodGlucoseUnits" json:"units,omitempty"`
	// Tidepool recommended bounds
	RecommendedBounds *RecommendedBounds `protobuf:"bytes,2,opt,name=recommendedBounds,proto3" json:"recommendedBounds,omitempty"`
	// Device specific absolute bounds
	AbsoluteBounds *AbsoluteBounds `protobuf:"bytes,3,opt,name=absoluteBounds,proto3" json:"absoluteBounds,omitempty"`
	// Maximum number of time segments
	MaxSegments *int32 `protobuf:"varint,4,opt,name=maxSegments,proto3,oneof" json:"maxSegments,omitempty"`
}

func (x *CorrectionRangeGuardRail) Reset() {
	*x = CorrectionRangeGuardRail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CorrectionRangeGuardRail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CorrectionRangeGuardRail) ProtoMessage() {}

func (x *CorrectionRangeGuardRail) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CorrectionRangeGuardRail.ProtoReflect.Descriptor instead.
func (*CorrectionRangeGuardRail) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12}
}

func (x *CorrectionRangeGuardRail) GetUnits() BloodGlucoseUnits {
	if x != nil {
		return x.Units
	}
	return BloodGlucoseUnits_MilligramsPerDeciliter
}

func (x *CorrectionRangeGuardRail) GetRecommendedBounds() *RecommendedBounds {
	if x != nil {
		return x.RecommendedBounds
	}
	return nil
}

func (x *CorrectionRangeGuardRail) GetAbsoluteBounds() *AbsoluteBounds {
	if x != nil {
		return x.AbsoluteBounds
	}
	return nil
}

func (x *CorrectionRangeGuardRail) GetMaxSegments() int32 {
	if x != nil && x.MaxSegments != nil {
		return *x.MaxSegments
	}
	return 0
}

// Closed range double interval
type AbsoluteBounds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Lower bound (inclusive)
	Minimum *FixedDecimal `protobuf:"bytes,1,opt,name=minimum,proto3" json:"minimum,omitempty"`
	// Upper bound (inclusive)
	Maximum *FixedDecimal `protobuf:"bytes,2,opt,name=maximum,proto3" json:"maximum,omitempty"`
	// Increment
	Increment *FixedDecimal `protobuf:"bytes,3,opt,name=increment,proto3" json:"increment,omitempty"`
}

func (x *AbsoluteBounds) Reset() {
	*x = AbsoluteBounds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbsoluteBounds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbsoluteBounds) ProtoMessage() {}

func (x *AbsoluteBounds) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbsoluteBounds.ProtoReflect.Descriptor instead.
func (*AbsoluteBounds) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{13}
}

func (x *AbsoluteBounds) GetMinimum() *FixedDecimal {
	if x != nil {
		return x.Minimum
	}
	return nil
}

func (x *AbsoluteBounds) GetMaximum() *FixedDecimal {
	if x != nil {
		return x.Maximum
	}
	return nil
}

func (x *AbsoluteBounds) GetIncrement() *FixedDecimal {
	if x != nil {
		return x.Increment
	}
	return nil
}

// Closed range double interval
type RecommendedBounds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Lower bound (inclusive)
	Minimum *FixedDecimal `protobuf:"bytes,1,opt,name=minimum,proto3" json:"minimum,omitempty"`
	// Upper bound (inclusive)
	Maximum *FixedDecimal `protobuf:"bytes,2,opt,name=maximum,proto3" json:"maximum,omitempty"`
}

func (x *RecommendedBounds) Reset() {
	*x = RecommendedBounds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecommendedBounds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecommendedBounds) ProtoMessage() {}

func (x *RecommendedBounds) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecommendedBounds.ProtoReflect.Descriptor instead.
func (*RecommendedBounds) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{14}
}

func (x *RecommendedBounds) GetMinimum() *FixedDecimal {
	if x != nil {
		return x.Minimum
	}
	return nil
}

func (x *RecommendedBounds) GetMaximum() *FixedDecimal {
	if x != nil {
		return x.Maximum
	}
	return nil
}

type FixedDecimal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The whole units of the amount
	Units int32 `protobuf:"varint,1,opt,name=units,proto3" json:"units,omitempty"`
	// Number of nano (10^-9) units of the amount.
	Nanos int32 `protobuf:"varint,2,opt,name=nanos,proto3" json:"nanos,omitempty"`
}

func (x *FixedDecimal) Reset() {
	*x = FixedDecimal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixedDecimal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixedDecimal) ProtoMessage() {}

func (x *FixedDecimal) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixedDecimal.ProtoReflect.Descriptor instead.
func (*FixedDecimal) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{15}
}

func (x *FixedDecimal) GetUnits() int32 {
	if x != nil {
		return x.Units
	}
	return 0
}

func (x *FixedDecimal) GetNanos() int32 {
	if x != nil {
		return x.Nanos
	}
	return 0
}

type GetCgmByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCgmByIdRequest) Reset() {
	*x = GetCgmByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCgmByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCgmByIdRequest) ProtoMessage() {}

func (x *GetCgmByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCgmByIdRequest.ProtoReflect.Descriptor instead.
func (*GetCgmByIdRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{16}
}

func (x *GetCgmByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCgmByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cgm *Cgm `protobuf:"bytes,1,opt,name=cgm,proto3" json:"cgm,omitempty"`
}

func (x *GetCgmByIdResponse) Reset() {
	*x = GetCgmByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCgmByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCgmByIdResponse) ProtoMessage() {}

func (x *GetCgmByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCgmByIdResponse.ProtoReflect.Descriptor instead.
func (*GetCgmByIdResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{17}
}

func (x *GetCgmByIdResponse) GetCgm() *Cgm {
	if x != nil {
		return x.Cgm
	}
	return nil
}

type ListCgmsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListCgmsRequest) Reset() {
	*x = ListCgmsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCgmsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCgmsRequest) ProtoMessage() {}

func (x *ListCgmsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCgmsRequest.ProtoReflect.Descriptor instead.
func (*ListCgmsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{18}
}

type ListCgmsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cgms []*Cgm `protobuf:"bytes,1,rep,name=cgms,proto3" json:"cgms,omitempty"`
}

func (x *ListCgmsResponse) Reset() {
	*x = ListCgmsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCgmsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCgmsResponse) ProtoMessage() {}

func (x *ListCgmsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCgmsResponse.ProtoReflect.Descriptor instead.
func (*ListCgmsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{19}
}

func (x *ListCgmsResponse) GetCgms() []*Cgm {
	if x != nil {
		return x.Cgms
	}
	return nil
}

type Cgm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique device identifier
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// device display name
	DisplayName string `protobuf:"bytes,2,opt,name=displayName,proto3" json:"displayName,omitempty"`
	// device manufacturers
	Manufacturers []string `protobuf:"bytes,3,rep,name=manufacturers,proto3" json:"manufacturers,omitempty"`
	// device model
	Model string `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *Cgm) Reset() {
	*x = Cgm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cgm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cgm) ProtoMessage() {}

func (x *Cgm) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cgm.ProtoReflect.Descriptor instead.
func (*Cgm) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{20}
}

func (x *Cgm) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Cgm) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Cgm) GetManufacturers() []string {
	if x != nil {
		return x.Manufacturers
	}
	return nil
}

func (x *Cgm) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x24,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x75, 0x6d, 0x70, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x75, 0x6d, 0x70, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x04, 0x70,
	0x75, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x75, 0x6d, 0x70, 0x52, 0x04, 0x70, 0x75, 0x6d, 0x70, 0x22, 0x12, 0x0a, 0x10, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x75, 0x6d, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x34,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x6d, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x70, 0x75, 0x6d, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x75, 0x6d, 0x70, 0x52, 0x05, 0x70,
	0x75, 0x6d, 0x70, 0x73, 0x22, 0xa5, 0x01, 0x0a, 0x04, 0x50, 0x75, 0x6d, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x2f, 0x0a, 0x0a, 0x67,
	0x75, 0x61, 0x72, 0x64, 0x52, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x75, 0x61, 0x72, 0x64, 0x52, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x0a, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xd6, 0x05, 0x0a,
	0x0a, 0x47, 0x75, 0x61, 0x72, 0x64, 0x52, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x50, 0x0a, 0x12, 0x67,
	0x6c, 0x75, 0x63, 0x6f, 0x73, 0x65, 0x53, 0x61, 0x66, 0x65, 0x74, 0x79, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x6c,
	0x75, 0x63, 0x6f, 0x73, 0x65, 0x53, 0x61, 0x66, 0x65, 0x74, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x47, 0x75, 0x61, 0x72, 0x64, 0x52, 0x61, 0x69, 0x6c, 0x52, 0x12, 0x67, 0x6c, 0x75, 0x63, 0x6f,
	0x73, 0x65, 0x53, 0x61, 0x66, 0x65, 0x74, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x50, 0x0a,
	0x12, 0x69, 0x6e, 0x73, 0x75, 0x6c, 0x69, 0x6e, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x49, 0x6e, 0x73, 0x75, 0x6c, 0x69, 0x6e, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x47, 0x75, 0x61, 0x72, 0x64, 0x52, 0x61, 0x69, 0x6c, 0x52, 0x12, 0x69, 0x6e, 0x73,
	0x75, 0x6c, 0x69, 0x6e, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12,
	0x38, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x73, 0x61, 0x6c, 0x52,
	0x61, 0x74, 0x65, 0x73, 0x47, 0x75, 0x61, 0x72, 0x64, 0x52, 0x61, 0x69, 0x6c, 0x52, 0x0a, 0x62,
	0x61, 0x73, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x11, 0x63, 0x61, 0x72,
	0x62, 0x6f, 0x68, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x62, 0x6f,
	0x68, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x47, 0x75, 0x61, 0x72,
	0x64, 0x52, 0x61, 0x69, 0x6c, 0x52, 0x11, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x68, 0x79, 0x64, 0x72,
	0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x4a, 0x0a, 0x10, 0x62, 0x61, 0x73, 0x61,
	0x6c, 0x52, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x73, 0x61, 0x6c, 0x52, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x47, 0x75, 0x61, 0x72, 0x64, 0x52, 0x61,
	0x69, 0x6c, 0x52, 0x10, 0x62, 0x61, 0x73, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x78,
	0x69, 0x6d, 0x75, 0x6d, 0x12, 0x50, 0x0a, 0x12, 0x62, 0x6f, 0x6c, 0x75, 0x73, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x6f, 0x6c, 0x75, 0x73, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x47, 0x75, 0x61, 0x72, 0x64, 0x52, 0x61,
	0x69, 0x6c, 0x52, 0x12, 0x62, 0x6f, 0x6c, 0x75, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4d,
	0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x12, 0x47, 0x0a, 0x0f, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x47, 0x75, 0x61, 0x72, 0x64, 0x52, 0x61, 0x69, 0x6c, 0x52, 0x0f,
	0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x5d, 0x0a, 0x1a, 0x70, 0x72, 0x65, 0x70, 0x72, 0x61, 0x6e, 0x64, 0x69, 0x61, 0x6c, 0x43, 0x6f,
	0x72, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x47, 0x75, 0x61, 0x72, 0x64, 0x52, 0x61,
	0x69, 0x6c, 0x52, 0x1a, 0x70, 0x72, 0x65, 0x70, 0x72, 0x61, 0x6e, 0x64, 0x69, 0x61, 0x6c, 0x43,
	0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x55,
	0x0a, 0x16, 0x77, 0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x47, 0x75, 0x61, 0x72, 0x64, 0x52, 0x61, 0x69, 0x6c, 0x52, 0x16, 0x77,
	0x6f, 0x72, 0x6b, 0x6f, 0x75, 0x74, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0xce, 0x01, 0x0a, 0x1b, 0x47, 0x6c, 0x75, 0x63, 0x6f, 0x73,
	0x65, 0x53, 0x61, 0x66, 0x65, 0x74, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x47, 0x75, 0x61, 0x72,
	0x64, 0x52, 0x61, 0x69, 0x6c, 0x12, 0x2c, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x6c, 0x6f, 0x6f, 0x64,
	0x47, 0x6c, 0x75, 0x63, 0x6f, 0x73, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x05, 0x75, 0x6e,
	0x69, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x3b, 0x0a, 0x0e, 0x61, 0x62, 0x73,
	0x6f, 0x6c, 0x75, 0x74, 0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65,
	0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x0e, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65,
	0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x22, 0x85, 0x02, 0x0a, 0x1b, 0x49, 0x6e, 0x73, 0x75, 0x6c,
	0x69, 0x6e, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x75, 0x61,
	0x72, 0x64, 0x52, 0x61, 0x69, 0x6c, 0x12, 0x2c, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x6c, 0x6f, 0x6f,
	0x64, 0x47, 0x6c, 0x75, 0x63, 0x6f, 0x73, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x05, 0x75,
	0x6e, 0x69, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65,
	0x64, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x3b, 0x0a, 0x0e, 0x61, 0x62,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x0e, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x53, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0b,
	0x6d, 0x61, 0x78, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xeb,
	0x01, 0x0a, 0x13, 0x42, 0x61, 0x73, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x73, 0x47, 0x75, 0x61,
	0x72, 0x64, 0x52, 0x61, 0x69, 0x6c, 0x12, 0x29, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x73, 0x61,
	0x6c, 0x52, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x74,
	0x73, 0x12, 0x35, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69,
	0x78, 0x65, 0x64, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x61, 0x62, 0x73, 0x6f,
	0x6c, 0x75, 0x74, 0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x42,
	0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x0e, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x42,
	0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x61,
	0x78, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x89, 0x02, 0x0a,
	0x1a, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x68, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74,
	0x69, 0x6f, 0x47, 0x75, 0x61, 0x72, 0x64, 0x52, 0x61, 0x69, 0x6c, 0x12, 0x31, 0x0a, 0x05, 0x75,
	0x6e, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x61, 0x72, 0x62, 0x6f, 0x68, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74,
	0x69, 0x6f, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x44,
	0x0a, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x6f, 0x75,
	0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x6f, 0x75, 0x6e, 0x64,
	0x73, 0x52, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x6f,
	0x75, 0x6e, 0x64, 0x73, 0x12, 0x3b, 0x0a, 0x0e, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65,
	0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64,
	0x73, 0x52, 0x0e, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64,
	0x73, 0x12, 0x25, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d, 0x61, 0x78,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xba, 0x01, 0x0a, 0x19, 0x42, 0x61, 0x73,
	0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x47, 0x75, 0x61,
	0x72, 0x64, 0x52, 0x61, 0x69, 0x6c, 0x12, 0x29, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x73, 0x61,
	0x6c, 0x52, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x74,
	0x73, 0x12, 0x35, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69,
	0x78, 0x65, 0x64, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x61, 0x62, 0x73, 0x6f,
	0x6c, 0x75, 0x74, 0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x42,
	0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x0e, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x42,
	0x6f, 0x75, 0x6e, 0x64, 0x73, 0x22, 0xcd, 0x01, 0x0a, 0x1b, 0x42, 0x6f, 0x6c, 0x75, 0x73, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x47, 0x75, 0x61, 0x72,
	0x64, 0x52, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x6f, 0x6c, 0x75, 0x73,
	0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x11,
	0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x6f, 0x75, 0x6e, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52,
	0x11, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x6f, 0x75, 0x6e,
	0x64, 0x73, 0x12, 0x3b, 0x0a, 0x0e, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x42, 0x6f,
	0x75, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52,
	0x0e, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x4a,
	0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0x82, 0x02, 0x0a, 0x18, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x47, 0x75, 0x61, 0x72, 0x64, 0x52, 0x61,
	0x69, 0x6c, 0x12, 0x2c, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x6c, 0x6f, 0x6f, 0x64, 0x47, 0x6c, 0x75,
	0x63, 0x6f, 0x73, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73,
	0x12, 0x44, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x42,
	0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x6f, 0x75,
	0x6e, 0x64, 0x73, 0x52, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x3b, 0x0a, 0x0e, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75,
	0x74, 0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x42, 0x6f, 0x75,
	0x6e, 0x64, 0x73, 0x52, 0x0e, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x42, 0x6f, 0x75,
	0x6e, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d,
	0x61, 0x78, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x0e, 0x41,
	0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x2b, 0x0a,
	0x07, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61,
	0x6c, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x12, 0x2b, 0x0a, 0x07, 0x6d, 0x61,
	0x78, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x07,
	0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x12, 0x2f, 0x0a, 0x09, 0x69, 0x6e, 0x63, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x09, 0x69,
	0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x6d, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x2b, 0x0a,
	0x07, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61,
	0x6c, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x12, 0x2b, 0x0a, 0x07, 0x6d, 0x61,
	0x78, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x07,
	0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x22, 0x3a, 0x0a, 0x0c, 0x46, 0x69, 0x78, 0x65, 0x64,
	0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6e, 0x61,
	0x6e, 0x6f, 0x73, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x67, 0x6d, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43,
	0x67, 0x6d, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a,
	0x0a, 0x03, 0x63, 0x67, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x67, 0x6d, 0x52, 0x03, 0x63, 0x67, 0x6d, 0x22, 0x11, 0x0a, 0x0f, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x67, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x30, 0x0a,
	0x10, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x67, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x67, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x67, 0x6d, 0x52, 0x04, 0x63, 0x67, 0x6d, 0x73, 0x22,
	0x73, 0x0a, 0x03, 0x43, 0x67, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x6e, 0x75,
	0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2a, 0x2f, 0x0a, 0x11, 0x42, 0x6c, 0x6f, 0x6f, 0x64, 0x47, 0x6c, 0x75,
	0x63, 0x6f, 0x73, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x69, 0x6c,
	0x6c, 0x69, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x50, 0x65, 0x72, 0x44, 0x65, 0x63, 0x69, 0x6c, 0x69,
	0x74, 0x65, 0x72, 0x10, 0x00, 0x2a, 0x22, 0x0a, 0x0e, 0x42, 0x61, 0x73, 0x61, 0x6c, 0x52, 0x61,
	0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x6e, 0x69, 0x74, 0x73,
	0x50, 0x65, 0x72, 0x48, 0x6f, 0x75, 0x72, 0x10, 0x00, 0x2a, 0x2a, 0x0a, 0x16, 0x43, 0x61, 0x72,
	0x62, 0x6f, 0x68, 0x79, 0x64, 0x72, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x55, 0x6e,
	0x69, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x72, 0x61, 0x6d, 0x73, 0x50, 0x65, 0x72, 0x55,
	0x6e, 0x69, 0x74, 0x10, 0x00, 0x2a, 0x17, 0x0a, 0x0a, 0x42, 0x6f, 0x6c, 0x75, 0x73, 0x55, 0x6e,
	0x69, 0x74, 0x73, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x10, 0x00, 0x32, 0xf3,
	0x02, 0x0a, 0x07, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x60, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x50, 0x75, 0x6d, 0x70, 0x42, 0x79, 0x49, 0x64, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x75, 0x6d, 0x70, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x6d, 0x70,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2f, 0x70, 0x75, 0x6d, 0x70, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x55, 0x0a, 0x09,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x6d, 0x70, 0x73, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x6d, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x6d, 0x70, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13,
	0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x75,
	0x6d, 0x70, 0x73, 0x12, 0x5c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x67, 0x6d, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x67, 0x6d, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x67, 0x6d, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x67, 0x6d, 0x73, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0x51, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x67, 0x6d, 0x73, 0x12, 0x14, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x67, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x67,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x12, 0x12, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f,
	0x63, 0x67, 0x6d, 0x73, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x74, 0x69, 0x64, 0x65, 0x70, 0x6f, 0x6f, 0x6c, 0x2d, 0x6f, 0x72, 0x67, 0x2f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_api_proto_goTypes = []any{
	(BloodGlucoseUnits)(0),              // 0: api.BloodGlucoseUnits
	(BasalRateUnits)(0),                 // 1: api.BasalRateUnits
	(CarbohydrateRatioUnits)(0),         // 2: api.CarbohydrateRatioUnits
	(BolusUnits)(0),                     // 3: api.BolusUnits
	(*GetPumpByIdRequest)(nil),          // 4: api.GetPumpByIdRequest
	(*GetPumpByIdResponse)(nil),         // 5: api.GetPumpByIdResponse
	(*ListPumpsRequest)(nil),            // 6: api.ListPumpsRequest
	(*ListPumpsResponse)(nil),           // 7: api.ListPumpsResponse
	(*Pump)(nil),                        // 8: api.Pump
	(*GuardRails)(nil),                  // 9: api.GuardRails
	(*GlucoseSafetyLimitGuardRail)(nil), // 10: api.GlucoseSafetyLimitGuardRail
	(*InsulinSensitivityGuardRail)(nil), // 11: api.InsulinSensitivityGuardRail
	(*BasalRatesGuardRail)(nil),         // 12: api.BasalRatesGuardRail
	(*CarbohydrateRatioGuardRail)(nil),  // 13: api.CarbohydrateRatioGuardRail
	(*BasalRateMaximumGuardRail)(nil),   // 14: api.BasalRateMaximumGuardRail
	(*BolusAmountMaximumGuardRail)(nil), // 15: api.BolusAmountMaximumGuardRail
	(*CorrectionRangeGuardRail)(nil),    // 16: api.CorrectionRangeGuardRail
	(*AbsoluteBounds)(nil),              // 17: api.AbsoluteBounds
	(*RecommendedBounds)(nil),           // 18: api.RecommendedBounds
	(*FixedDecimal)(nil),                // 19: api.FixedDecimal
	(*GetCgmByIdRequest)(nil),           // 20: api.GetCgmByIdRequest
	(*GetCgmByIdResponse)(nil),          // 21: api.GetCgmByIdResponse
	(*ListCgmsRequest)(nil),             // 22: api.ListCgmsRequest
	(*ListCgmsResponse)(nil),            // 23: api.ListCgmsResponse
	(*Cgm)(nil),                         // 24: api.Cgm
}
var file_api_proto_depIdxs = []int32{
	8,  // 0: api.GetPumpByIdResponse.pump:type_name -> api.Pump
	8,  // 1: api.ListPumpsResponse.pumps:type_name -> api.Pump
	9,  // 2: api.Pump.guardRails:type_name -> api.GuardRails
	10, // 3: api.GuardRails.glucoseSafetyLimit:type_name -> api.GlucoseSafetyLimitGuardRail
	11, // 4: api.GuardRails.insulinSensitivity:type_name -> api.InsulinSensitivityGuardRail
	12, // 5: api.GuardRails.basalRates:type_name -> api.BasalRatesGuardRail
	13, // 6: api.GuardRails.carbohydrateRatio:type_name -> api.CarbohydrateRatioGuardRail
	14, // 7: api.GuardRails.basalRateMaximum:type_name -> api.BasalRateMaximumGuardRail
	15, // 8: api.GuardRails.bolusAmountMaximum:type_name -> api.BolusAmountMaximumGuardRail
	16, // 9: api.GuardRails.correctionRange:type_name -> api.CorrectionRangeGuardRail
	16, // 10: api.GuardRails.preprandialCorrectionRange:type_name -> api.CorrectionRangeGuardRail
	16, // 11: api.GuardRails.workoutCorrectionRange:type_name -> api.CorrectionRangeGuardRail
	0,  // 12: api.GlucoseSafetyLimitGuardRail.units:type_name -> api.BloodGlucoseUnits
	18, // 13: api.GlucoseSafetyLimitGuardRail.recommendedBounds:type_name -> api.RecommendedBounds
	17, // 14: api.GlucoseSafetyLimitGuardRail.absoluteBounds:type_name -> api.AbsoluteBounds
	0,  // 15: api.InsulinSensitivityGuardRail.units:type_name -> api.BloodGlucoseUnits
	18, // 16: api.InsulinSensitivityGuardRail.recommendedBounds:type_name -> api.RecommendedBounds
	17, // 17: api.InsulinSensitivityGuardRail.absoluteBounds:type_name -> api.AbsoluteBounds
	1,  // 18: api.BasalRatesGuardRail.units:type_name -> api.BasalRateUnits
	19, // 19: api.BasalRatesGuardRail.defaultValue:type_name -> api.FixedDecimal
	17, // 20: api.BasalRatesGuardRail.absoluteBounds:type_name -> api.AbsoluteBounds
	2,  // 21: api.CarbohydrateRatioGuardRail.units:type_name -> api.CarbohydrateRatioUnits
	18, // 22: api.CarbohydrateRatioGuardRail.recommendedBounds:type_name -> api.RecommendedBounds
	17, // 23: api.CarbohydrateRatioGuardRail.absoluteBounds:type_name -> api.AbsoluteBounds
	1,  // 24: api.BasalRateMaximumGuardRail.units:type_name -> api.BasalRateUnits
	19, // 25: api.BasalRateMaximumGuardRail.defaultValue:type_name -> api.FixedDecimal
	17, // 26: api.BasalRateMaximumGuardRail.absoluteBounds:type_name -> api.AbsoluteBounds
	3,  // 27: api.BolusAmountMaximumGuardRail.units:type_name -> api.BolusUnits
	18, // 28: api.BolusAmountMaximumGuardRail.recommendedBounds:type_name -> api.RecommendedBounds
	17, // 29: api.BolusAmountMaximumGuardRail.absoluteBounds:type_name -> api.AbsoluteBounds
	0,  // 30: api.CorrectionRangeGuardRail.units:type_name -> api.BloodGlucoseUnits
	18, // 31: api.CorrectionRangeGuardRail.recommendedBounds:type_name -> api.RecommendedBounds
	17, // 32: api.CorrectionRangeGuardRail.absoluteBounds:type_name -> api.AbsoluteBounds
	19, // 33: api.AbsoluteBounds.minimum:type_name -> api.FixedDecimal
	19, // 34: api.AbsoluteBounds.maximum:type_name -> api.FixedDecimal
	19, // 35: api.AbsoluteBounds.increment:type_name -> api.FixedDecimal
	19, // 36: api.RecommendedBounds.minimum:type_name -> api.FixedDecimal
	19, // 37: api.RecommendedBounds.maximum:type_name -> api.FixedDecimal
	24, // 38: api.GetCgmByIdResponse.cgm:type_name -> api.Cgm
	24, // 39: api.ListCgmsResponse.cgms:type_name -> api.Cgm
	4,  // 40: api.Devices.GetPumpById:input_type -> api.GetPumpByIdRequest
	6,  // 41: api.Devices.ListPumps:input_type -> api.ListPumpsRequest
	20, // 42: api.Devices.GetCgmById:input_type -> api.GetCgmByIdRequest
	22, // 43: api.Devices.ListCgms:input_type -> api.ListCgmsRequest
	5,  // 44: api.Devices.GetPumpById:output_type -> api.GetPumpByIdResponse
	7,  // 45: api.Devices.ListPumps:output_type -> api.ListPumpsResponse
	21, // 46: api.Devices.GetCgmById:output_type -> api.GetCgmByIdResponse
	23, // 47: api.Devices.ListCgms:output_type -> api.ListCgmsResponse
	44, // [44:48] is the sub-list for method output_type
	40, // [40:44] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetPumpByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetPumpByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ListPumpsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ListPumpsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Pump); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GuardRails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GlucoseSafetyLimitGuardRail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*InsulinSensitivityGuardRail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*BasalRatesGuardRail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CarbohydrateRatioGuardRail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*BasalRateMaximumGuardRail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*BolusAmountMaximumGuardRail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CorrectionRangeGuardRail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*AbsoluteBounds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*RecommendedBounds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*FixedDecimal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetCgmByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetCgmByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*ListCgmsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*ListCgmsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*Cgm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_proto_msgTypes[7].OneofWrappers = []any{}
	file_api_proto_msgTypes[8].OneofWrappers = []any{}
	file_api_proto_msgTypes[9].OneofWrappers = []any{}
	file_api_proto_msgTypes[12].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		EnumInfos:         file_api_proto_enumTypes,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}
